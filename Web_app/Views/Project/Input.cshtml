@model Web_app.Models.Project

@{
    ViewBag.Title = "Вихідні дані";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <h2>Вихідні дані</h2>

        <h4>Проект</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectCurRate, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.ProjectCurRate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectCurRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectDate, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.ProjectDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectComment, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.ProjectComment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectComment, "", new { @class = "text-danger" })
            </div>
        </div>

        <h4>Котел</h4>
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.BoilerName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.BoilerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BoilerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BolerPower, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.BolerPower, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BolerPower, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BoilerProductivity, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.BoilerProductivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BoilerProductivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BoilerPressure, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.BoilerPressure, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BoilerPressure, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BoilerEfficiency, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.BoilerEfficiency, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BoilerEfficiency, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BoilerAnnnualLoad, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.BoilerAnnnualLoad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BoilerAnnnualLoad, "", new { @class = "text-danger" })
            </div>
        </div>

        <h4>Водно-хімічний режим</h4>
        <hr />

        <h5 class="underline">Вихідна вода</h5>

        <div class="form-group">
            @Html.LabelFor(model => model.WaterInConductivity, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.WaterInConductivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WaterInConductivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WaterInHardness, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.WaterInHardness, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WaterInHardness, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WaterInTemperature, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.WaterInTemperature, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WaterInTemperature, "", new { @class = "text-danger" })
            </div>
        </div>

        <h5 class="underline">Конденсат</h5>

        <div class="form-group">
            @Html.LabelFor(model => model.WaterCondensateReturn, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.WaterCondensateReturn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WaterCondensateReturn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WaterCondensateConductivity, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.WaterCondensateConductivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WaterCondensateConductivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WaterCondensateTemperature, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.WaterCondensateTemperature, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WaterCondensateTemperature, "", new { @class = "text-danger" })
            </div>
        </div>

        <h5 class="underline">Підготовлена вода (демінералізована, електропровідність < 30 мкСм/см)</h5>

        <div class="form-group">
            @Html.LabelFor(model => model.WaterROConductivity, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.WaterROConductivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WaterROConductivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WaterROConductivityMax, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.WaterROConductivityMax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WaterROConductivityMax, "", new { @class = "text-danger" })
            </div>
        </div>

        <h5 class="underline">Підготовлена вода (пом'якшена, електропровідність > 30 мкСм/см)</h5>

        <div class="form-group">
            @Html.LabelFor(model => model.WaterIXConductivity, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.WaterIXConductivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WaterIXConductivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WaterIXConductivityMax, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.WaterIXConductivityMax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WaterIXConductivityMax, "", new { @class = "text-danger" })
            </div>
        </div>

        <h2>Налаштування</h2>

        <h4>Демінералізація методом зворотнього осмосу (електропровідність на виході < 30 мкСм/см)</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsROEditOn, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.OptionsROEditOn)
                    @Html.ValidationMessageFor(model => model.OptionsROEditOn, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsROUFOn, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.OptionsROUFOn)
                    @Html.ValidationMessageFor(model => model.OptionsROUFOn, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsROUFPermeate, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.OptionsROUFPermeate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionsROUFPermeate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsROUFProductivity, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.OptionsROUFProductivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionsROUFProductivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsROROOn, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.OptionsROROOn)
                    @Html.ValidationMessageFor(model => model.OptionsROROOn, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsROROPermeate, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.OptionsROROPermeate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionsROROPermeate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsROROProductivity, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.OptionsROROProductivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionsROROProductivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsROIXOn, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.OptionsROIXOn)
                    @Html.ValidationMessageFor(model => model.OptionsROIXOn, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsROIXPermeate, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.OptionsROIXPermeate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionsROIXPermeate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsROIXProductivity, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.OptionsROIXProductivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionsROIXProductivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <h4>Пом'якшення шляхом іонного обміну (електропровідність на виході &gt; 30 мкСм/см)</h4>
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsIXEditOn, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.OptionsIXEditOn)
                    @Html.ValidationMessageFor(model => model.OptionsIXEditOn, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsIXUFOn, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.OptionsIXUFOn)
                    @Html.ValidationMessageFor(model => model.OptionsIXUFOn, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsIXUFPermeate, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.OptionsIXUFPermeate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionsIXUFPermeate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsIXUFProductivity, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.OptionsIXUFProductivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionsIXUFProductivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsIXIX1On, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.OptionsIXIX1On)
                    @Html.ValidationMessageFor(model => model.OptionsIXIX1On, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsIXIX1Permeate, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.OptionsIXIX1Permeate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionsIXIX1Permeate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsIXIX1Productivity, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.OptionsIXIX1Productivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionsIXIX1Productivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsIXIX2On, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.OptionsIXIX2On)
                    @Html.ValidationMessageFor(model => model.OptionsIXIX2On, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsIXIX2Permeate, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.OptionsIXIX2Permeate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionsIXIX2Permeate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionsIXIX2Productivity, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.OptionsIXIX2Productivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionsIXIX2Productivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <h4>Вартості і питомі витрати реагентів на 1 м3 підготовленної води</h4>

        <div class="form-group">
            <table class="table" style="min-width: 650px; max-width: 60%;">
                <tr>
                    <th class="col-md-2">
                        @Html.DisplayNameFor(model => model.ProjectPrices.First().Name)
                    </th>
                    <th class="col-md-1">
                        @Html.DisplayNameFor(model => model.ProjectPrices.First().Price)
                    </th>
                    <th class="col-md-1">
                        @Html.DisplayNameFor(model => model.ProjectPrices.First().UF)
                    </th>
                    <th class="col-md-1">
                        @Html.DisplayNameFor(model => model.ProjectPrices.First().RO)
                    </th>
                    <th class="col-md-1">
                        @Html.DisplayNameFor(model => model.ProjectPrices.First().IX1)
                    </th>
                    <th class="col-md-1">
                        @Html.DisplayNameFor(model => model.ProjectPrices.First().IX2)
                    </th>
                </tr>
                @for (int i = 0; i < Model.ProjectPrices.Count; i++)
                {

                    <tr>
                        <td>
                            @Html.DisplayFor(m => Model.ProjectPrices[i].Name)
                            @Html.EditorFor(m => Model.ProjectPrices[i].Id, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
                            @Html.EditorFor(m => Model.ProjectPrices[i].Name, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
                        </td>
                        <td>
                            @Html.EditorFor(m => Model.ProjectPrices[i].Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => Model.ProjectPrices[i].Price, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(m => Model.ProjectPrices[i].UF, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => Model.ProjectPrices[i].UF, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(m => Model.ProjectPrices[i].RO, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => Model.ProjectPrices[i].RO, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(m => Model.ProjectPrices[i].IX1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => Model.ProjectPrices[i].IX1, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(m => Model.ProjectPrices[i].IX2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => Model.ProjectPrices[i].IX2, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                }
            </table>
        </div>


        <div class="form-group">
            <div class="col-md-offset-4 col-md-10">
                <input type="submit" value="Зберегти і провести розрахунок" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Повернутися до списку проектів", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
